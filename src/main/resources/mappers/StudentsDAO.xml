<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiexin.dao.StudentsDAO">
  <resultMap id="BaseResultMap" type="com.xiexin.bean.Students">
    <id column="student_id" jdbcType="INTEGER" property="studentId" />
    <result column="student_name" jdbcType="VARCHAR" property="studentName" />
    <result column="student_sex" jdbcType="INTEGER" property="studentSex" />
    <result column="student_card_id" jdbcType="VARCHAR" property="studentCardId" />
    <result column="student_phone" jdbcType="VARCHAR" property="studentPhone" />
    <result column="student_address" jdbcType="VARCHAR" property="studentAddress" />
    <result column="student_come_date" jdbcType="TIMESTAMP" property="studentComeDate" />
    <result column="jiao_se_id" jdbcType="INTEGER" property="jiaoSeId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    student_id, student_name, student_sex, student_card_id, student_phone, student_address, 
    student_come_date, jiao_se_id
  </sql>
  <select id="selectByExample" parameterType="com.xiexin.bean.StudentsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from students
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from students
    where student_id = #{studentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from students
    where student_id = #{studentId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xiexin.bean.StudentsExample">
    delete from students
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xiexin.bean.Students">
    insert into students (student_id, student_name, student_sex, 
      student_card_id, student_phone, student_address, 
      student_come_date, jiao_se_id)
    values (#{studentId,jdbcType=INTEGER}, #{studentName,jdbcType=VARCHAR}, #{studentSex,jdbcType=INTEGER}, 
      #{studentCardId,jdbcType=VARCHAR}, #{studentPhone,jdbcType=VARCHAR}, #{studentAddress,jdbcType=VARCHAR}, 
      #{studentComeDate,jdbcType=TIMESTAMP}, #{jiaoSeId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xiexin.bean.Students">
    insert into students
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        student_id,
      </if>
      <if test="studentName != null">
        student_name,
      </if>
      <if test="studentSex != null">
        student_sex,
      </if>
      <if test="studentCardId != null">
        student_card_id,
      </if>
      <if test="studentPhone != null">
        student_phone,
      </if>
      <if test="studentAddress != null">
        student_address,
      </if>
      <if test="studentComeDate != null">
        student_come_date,
      </if>
      <if test="jiaoSeId != null">
        jiao_se_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="studentName != null">
        #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="studentSex != null">
        #{studentSex,jdbcType=INTEGER},
      </if>
      <if test="studentCardId != null">
        #{studentCardId,jdbcType=VARCHAR},
      </if>
      <if test="studentPhone != null">
        #{studentPhone,jdbcType=VARCHAR},
      </if>
      <if test="studentAddress != null">
        #{studentAddress,jdbcType=VARCHAR},
      </if>
      <if test="studentComeDate != null">
        #{studentComeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="jiaoSeId != null">
        #{jiaoSeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xiexin.bean.StudentsExample" resultType="java.lang.Long">
    select count(*) from students
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update students
    <set>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=INTEGER},
      </if>
      <if test="record.studentName != null">
        student_name = #{record.studentName,jdbcType=VARCHAR},
      </if>
      <if test="record.studentSex != null">
        student_sex = #{record.studentSex,jdbcType=INTEGER},
      </if>
      <if test="record.studentCardId != null">
        student_card_id = #{record.studentCardId,jdbcType=VARCHAR},
      </if>
      <if test="record.studentPhone != null">
        student_phone = #{record.studentPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.studentAddress != null">
        student_address = #{record.studentAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.studentComeDate != null">
        student_come_date = #{record.studentComeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.jiaoSeId != null">
        jiao_se_id = #{record.jiaoSeId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update students
    set student_id = #{record.studentId,jdbcType=INTEGER},
      student_name = #{record.studentName,jdbcType=VARCHAR},
      student_sex = #{record.studentSex,jdbcType=INTEGER},
      student_card_id = #{record.studentCardId,jdbcType=VARCHAR},
      student_phone = #{record.studentPhone,jdbcType=VARCHAR},
      student_address = #{record.studentAddress,jdbcType=VARCHAR},
      student_come_date = #{record.studentComeDate,jdbcType=TIMESTAMP},
      jiao_se_id = #{record.jiaoSeId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiexin.bean.Students">
    update students
    <set>
      <if test="studentName != null">
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="studentSex != null">
        student_sex = #{studentSex,jdbcType=INTEGER},
      </if>
      <if test="studentCardId != null">
        student_card_id = #{studentCardId,jdbcType=VARCHAR},
      </if>
      <if test="studentPhone != null">
        student_phone = #{studentPhone,jdbcType=VARCHAR},
      </if>
      <if test="studentAddress != null">
        student_address = #{studentAddress,jdbcType=VARCHAR},
      </if>
      <if test="studentComeDate != null">
        student_come_date = #{studentComeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="jiaoSeId != null">
        jiao_se_id = #{jiaoSeId,jdbcType=INTEGER},
      </if>
    </set>
    where student_id = #{studentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiexin.bean.Students">
    update students
    set student_name = #{studentName,jdbcType=VARCHAR},
      student_sex = #{studentSex,jdbcType=INTEGER},
      student_card_id = #{studentCardId,jdbcType=VARCHAR},
      student_phone = #{studentPhone,jdbcType=VARCHAR},
      student_address = #{studentAddress,jdbcType=VARCHAR},
      student_come_date = #{studentComeDate,jdbcType=TIMESTAMP},
      jiao_se_id = #{jiaoSeId,jdbcType=INTEGER}
    where student_id = #{studentId,jdbcType=INTEGER}
  </update>

  <insert id="insertSelectiveDTO" parameterType="com.xiexin.bean.Students">
    insert into students (student_id, student_name, student_sex,
      student_card_id, student_phone, student_address,
      student_come_date,jiao_se_id)
    values (#{studentId,jdbcType=INTEGER}, #{studentName,jdbcType=VARCHAR}, #{studentSex,jdbcType=INTEGER},
      #{studentCardId,jdbcType=VARCHAR}, #{studentPhone,jdbcType=VARCHAR}, #{studentAddress,jdbcType=VARCHAR},
      #{studentComeDate,jdbcType=TIMESTAMP},#{jiaoSeId,jdbcType=TIMESTAMP})
  </insert>

  <select id="selectMore" resultType="map" parameterType="map">
    select ss.student_name studentName, ss.student_sex studentSex,
    ss.student_card_id studentCardId,ss.student_phone studentPhone,
    ss.student_address studentAddress,ss.student_come_date studentComeDate,
    js.jiao_se_name jiaoSeName
    from students ss join jiao_se js on ss.jiao_se_id = js.jiao_se_id
    <where>
      <if test="jiaoSeName!=null and jiaoSeName!='' ">
        and js.jiao_se_name = #{jiaoSeName}
      </if>
    </where>
  </select>

</mapper>